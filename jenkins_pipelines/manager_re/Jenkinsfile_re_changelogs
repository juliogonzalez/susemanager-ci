#!/usr/bin/env groovy

def gitClone(String branch) {
  checkout([$class: 'GitSCM',
            branches: [[name: "${branch}"]],
            doGenerateSubmoduleConfigurations: false,
            extensions: [[$class: 'RelativeTargetDirectory', relativeTargetDir: 'spacewalk'],
                         [$class: 'CloneOption', timeout: 30, noTags: false, reference: '']], //, shallow: true, depth: 5000]],
            submoduleCfg: [],
            userRemoteConfigs: [[url: 'git@github.com:SUSE/spacewalk.git']]
  ])
}

def getReport(String branch) {
  def reportFile = "changelog-${branch}.txt"
  echo "Running report for ${branch} (${reportFile})..."
  try {
    gitClone(branch)
    sh "rm -rf ${env.WORKSPACE}/tito"
    sh "cd ${env.WORKSPACE}/spacewalk && /usr/bin/tito report -o ${env.WORKSPACE}/tito --untagged-commits | tee ${env.WORKSPACE}/${reportFile}"
  }
  finally {
    archive "${reportFile}"
  }
}

def listBuilders(branches) {
  def builders = [:]
  // I tried branches.each() but does not work due to JENKINS-26481
  for (int i = 0; i < branches.size(); i++) {
    def branch = branches.get(i)
    builders["${branch}"] = {
      node('manager-jenkins-node') {
        getReport(branch)
      }
    }
  }
  return builders
}

properties([
    buildDiscarder(logRotator(numToKeepStr: '20')),
    disableConcurrentBuilds(),
    pipelineTriggers([cron('H 5 * * 3')]),
    parameters([choice(name: 'versions',
                       description: 'Please select versions to generate reports',
                       choices: 'Manager-3.1\nManager-3.0',
                       defaultValue: 'Manager-3.1\nManager-3.0')])
])


timestamps {
  node('manager-jenkins-node') {
    stage('Report untaggged commits') {
      parallel listBuilders(versions)
    }
  }
}
